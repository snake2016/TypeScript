=== tests/cases/conformance/salsa/a.js ===
var GLOBSTAR = m.GLOBSTAR = {}
>GLOBSTAR : { [x: string]: any; q: number; p: number; }
>m.GLOBSTAR = {} : { [x: string]: any; q: number; p: number; }
>m.GLOBSTAR : { [x: string]: any; q: number; p: number; }
>m : { (): void; GLOBSTAR: { [x: string]: any; q: number; p: number; }; }
>GLOBSTAR : { [x: string]: any; q: number; p: number; }
>{} : { [x: string]: any; }

function m() {
>m : { (): void; GLOBSTAR: { [x: string]: any; q: number; p: number; }; }
}
GLOBSTAR.p = 1
>GLOBSTAR.p = 1 : 1
>GLOBSTAR.p : number
>GLOBSTAR : { [x: string]: any; q: number; p: number; }
>p : number
>1 : 1

m.GLOBSTAR.q = 2
>m.GLOBSTAR.q = 2 : 2
>m.GLOBSTAR.q : number
>m.GLOBSTAR : { [x: string]: any; q: number; p: number; }
>m : { (): void; GLOBSTAR: { [x: string]: any; q: number; p: number; }; }
>GLOBSTAR : { [x: string]: any; q: number; p: number; }
>q : number
>2 : 2

GLOBSTAR.p
>GLOBSTAR.p : number
>GLOBSTAR : { [x: string]: any; q: number; p: number; }
>p : number

GLOBSTAR.q
>GLOBSTAR.q : number
>GLOBSTAR : { [x: string]: any; q: number; p: number; }
>q : number

m.GLOBSTAR.p
>m.GLOBSTAR.p : number
>m.GLOBSTAR : { [x: string]: any; q: number; p: number; }
>m : { (): void; GLOBSTAR: { [x: string]: any; q: number; p: number; }; }
>GLOBSTAR : { [x: string]: any; q: number; p: number; }
>p : number

m.GLOBSTAR.q
>m.GLOBSTAR.q : number
>m.GLOBSTAR : { [x: string]: any; q: number; p: number; }
>m : { (): void; GLOBSTAR: { [x: string]: any; q: number; p: number; }; }
>GLOBSTAR : { [x: string]: any; q: number; p: number; }
>q : number

