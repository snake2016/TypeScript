tests/cases/conformance/jsx/file.tsx(8,43): error TS2326: Types of property 'ignore-prop' are incompatible.
  Type '(T & { ignore-prop: number; })["ignore-prop"]' is not assignable to type 'string'.
    Type 'number' is not assignable to type 'string'.
tests/cases/conformance/jsx/file.tsx(13,15): error TS2322: Type 'T' is not assignable to type 'IntrinsicAttributes & { prop: {}; "ignore-prop": string; }'.
  Type 'T' is not assignable to type '{ prop: {}; "ignore-prop": string; }'.
tests/cases/conformance/jsx/file.tsx(20,19): error TS2326: Types of property 'func' are incompatible.
  Type '(a: number, b: string) => void' is not assignable to type '(arg: number) => void'.
tests/cases/conformance/jsx/file.tsx(31,52): error TS2326: Types of property 'selectHandler' are incompatible.
  Type '(val: string) => void' is not assignable to type '(selectedVal: number) => void'.
    Types of parameters 'val' and 'selectedVal' are incompatible.
      Type 'number' is not assignable to type 'string'.


==== tests/cases/conformance/jsx/file.tsx (4 errors) ====
    import React = require('react')
    
    declare function ComponentSpecific1<U>(l: {prop: U, "ignore-prop": string}): JSX.Element;
    declare function ComponentSpecific2<U>(l: {prop: U}): JSX.Element;
    
    // Error
    function Bar<T extends {prop: number}>(arg: T) {
        let a1 = <ComponentSpecific1 {...arg} ignore-prop={10} />;
                                              ~~~~~~~~~~~~~~~~
!!! error TS2326: Types of property 'ignore-prop' are incompatible.
!!! error TS2326:   Type '(T & { ignore-prop: number; })["ignore-prop"]' is not assignable to type 'string'.
!!! error TS2326:     Type 'number' is not assignable to type 'string'.
     }
    
    // Error
    function Baz<T>(arg: T) {
        let a0 = <ComponentSpecific1 {...arg} />
                  ~~~~~~~~~~~~~~~~~~
!!! error TS2322: Type 'T' is not assignable to type 'IntrinsicAttributes & { prop: {}; "ignore-prop": string; }'.
!!! error TS2322:   Type 'T' is not assignable to type '{ prop: {}; "ignore-prop": string; }'.
    }
    
    declare function Link<U>(l: {func: (arg: U)=>void}): JSX.Element;
    
    // Error
    function createLink(func: (a: number, b: string)=>void) {
        let o = <Link func={func} />
                      ~~~~~~~~~~~
!!! error TS2326: Types of property 'func' are incompatible.
!!! error TS2326:   Type '(a: number, b: string) => void' is not assignable to type '(arg: number) => void'.
    }
    
    interface InferParamProp<T> {
        values: Array<T>;
        selectHandler: (selectedVal: T) => void;
    }
    
    declare function InferParamComponent<T>(attr: InferParamProp<T>): JSX.Element;
    
    // Error
    let i = <InferParamComponent values={[1, 2, 3, 4]} selectHandler={(val: string) => { }} />;
                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
!!! error TS2326: Types of property 'selectHandler' are incompatible.
!!! error TS2326:   Type '(val: string) => void' is not assignable to type '(selectedVal: number) => void'.
!!! error TS2326:     Types of parameters 'val' and 'selectedVal' are incompatible.
!!! error TS2326:       Type 'number' is not assignable to type 'string'.
    